= Workday - Upgrade the Connector to Version 12.0 - Mule 4
ifndef::env-site,env-github[]
include::_attributes.adoc[]
endif::[]
:page-aliases: workday/workday-studio.adoc

Upgrade Anypoint Connector for Workday (Workday Connector) to version 12.0.0.

== Supported Upgrade Paths

[%header,cols="50a,50a"]
|===
|From Version | To Version
|11.1.2 |12.0.0
|===

== Changes in This Release

This release contains the following changes:

* Upgraded the Workday API to 34.0
* Added the `Student Core` operation, which enables you to invoke the Workday Student Core web service
* Replaced the `On New Object` input source with the `On Modified Object` input source, which polls data more efficiently. For more information, see <<on-modified-object,On Modified Object>>.
* Removed the `blocking` field from the `Reconnect` and `Reconnect Forever` objects
* Changed all operations so that they return headers as attributes
* Removed the `WORKDAY:UNKNOWN` error type

== Changes in Connection Types

* Split the timeout fields into value and time unit fields
* Added the `Response Timeout` and 'Response Timeout Unit` fields to the connector configuration. You can use these fields to create response timeouts for the input source (`On Modified Objects`) and all connector operations.

== Changed Operations, Parameters, and Return Types

There are no changes related to operations, parameters, and return types.

== Changes in Operations Metadata

There are no changes related to keys, input metadata, or output metadata.

[[new-object-listener]]
== On Modified Objects Input Source

The `On New Objects` input source Workday Connector version 11x polled data in a Workday resource from the beginning of the specified time interval to the present. It did this for each worker in the Workday instance, which caused large time inefficiencies when the instance contained thousands of workers.

The new `On Modified Objects` input source, instead, always polls the latest data in the specified time interval. After one poll iteration, the input source sets the earliest moment as the previous latest moment and the latest moment as the current date and time. These changes to polling make the `On Modified Objects` input source much more efficient than the `On New Objects` input source.

You can use the `On Modified Objects` input source with the following operations:

* Human Resources
** `Get Workers`
** `Get Job Profiles`
* `Payroll interface`
** `Get Payees`
** `Payee Reference Id`
** `Pay Group Reference ID`
** `Universal ID`
* `Recruiting`
** `Get Evergreen Requisitions`
** `Get Job Requisitions`
** `Get Positions`
* `Staffing`
** `Get Workers`
** `Get Positions`

The following example shows how to use the `On Modified Objects` input source with the `Get Workers` operation: to 

output application/xml
----
<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">
    <configuration-properties file="mule-app.properties"/>
    <http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="0c4d4772-93c3-4e2b-bd77-da7e902ee907" >
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <workday:config-version-34-config
            name="config" doc:name="Workday Config version 34" doc:id="649d9b10-cfcc-46dd-bbe5-b7a8f7ed8136" timeZone="UTC+01:00">
        <workday:basic-authentication-api-v34-connection userName="username" password="password" tenantName="tname"/>
    </workday:config-version-34-config>
    <flow name="create-worker-flow" doc:id="8ba9e540-ab89-46c2-b04e-c706d74bc71e" >
        <http:listener doc:name="/put-worker" doc:id="f3124c01-c7d3-40ef-8e08-cd959853955d" config-ref="HTTP_Listener_config" path="/put-worker" />
        <ee:transform doc:name="testData">
            <ee:message>
            </ee:message>
            <ee:variables >
                <ee:set-variable variableName="testData" ><![CDATA[%dw 2.0
output application/java
var randomNumber = randomInt(999999999) as String
---
{
        countryReference: "USA",
        countryReferenceID: "bc33aa3152ec42d4995f4791a106ed09",
        communicationUsageTypeID: "Home",
        currentDate: (now() - |P1D|) as Date,
        employeeEmailAddress: "test_email" ++ randomNumber ++ "@gmail.com",
        employeeFirstName: "Jim",
        employeeLastName: "Jones_" ++ randomNumber,
        employeeTypeID: "Casual",
        jobPositionTitle: "test-position-"  ++ randomNumber,
        jobProfileID: "37600",
        locationID:  "San_Francisco_site" ,
        organizationReferenceID: "Human_Resources_supervisory",
        positionTimeTypeID: "Full_time"
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform doc:name="Prepare Create Position Request">
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Create_Position_Request @(ns0#version: "v33.2"): {
        ns0#Create_Position_Data: {
            ns0#Supervisory_Organization_Reference @(ns0#"Descriptor": "Descriptive"): {
                ns0#ID @(ns0#"type": "Organization_Reference_ID"): vars.testData.organizationReferenceID
            },
            ns0#Position_Data: {
                ns0#Job_Posting_Title: vars.testData.jobPositionTitle
            },
            ns0#Position_Group_Restrictions_Data: {
                ns0#Availability_Date : vars.testData.currentDate,
                ns0#Earliest_Hire_Date: vars.testData.currentDate
            }
        }
    }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <workday:staffing operation="Create_Position" doc:name="Create Position" config-ref="config"/>
        <ee:transform doc:name="Prepare Hire Employee Request">
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Hire_Employee_Request @(ns0#version: "v33.2"): {
        ns0#Hire_Employee_Data:{
            ns0#Applicant_Data: {
            ns0#Personal_Data: {
             ns0#Name_Data: {
               ns0#Legal_Name_Data: {
                ns0#Name_Detail_Data: {
                  ns0#Country_Reference @(ns0#"Descriptor": "Country_Reference"): {
                    ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): vars.testData.countryReference
                },
                ns0#First_Name: vars.testData.employeeFirstName,
                ns0#Last_Name: vars.testData.employeeLastName,
              }
            }
            },
            ns0#Contact_Data: {
                ns0#Email_Address_Data @(ns0#"Delete": "false" , ns0#"Do_Not_Replace_All": "false") : {
                    ns0#Email_Address : vars.testData.employeeEmailAddress,
                    ns0#Usage_Data @(ns0#"Public": "false"): {
                        ns0#Type_Data @(ns0#"Primary": "true") : {
                            ns0#Type_Reference @(ns0# "Descriptor": "Type_Reference"): {
                                ns0#ID @(ns0#"type": "Communication_Usage_Type_ID "): vars.testData.communicationUsageTypeID
                            }
                      }
                    }
                }
            }
          }
        },
        ns0#Organization_Reference @(ns0# "Descriptor": "Organization_Reference"): {
            ns0#ID @(ns0#"type": "Organization_Reference_ID"): vars.testData.organizationReferenceID
        },
        ns0#Position_Reference @(ns0# "Descriptor": "Position_Reference"): {
            ns0#ID @(ns0#"type": "WID"): payload.ns0#Create_Position_Response.ns0#Position_Reference.ns0#ID
        },
        ns0#Hire_Date: vars.testData.currentDate,
        ns0#Hire_Employee_Event_Data: {
            ns0#Employee_Type_Reference @(ns0# "Descriptor": "Hire_Reference"): {
                ns0#ID @(ns0#"type": "Employee_Type_ID "): vars.testData.employeeTypeID
            },
            ns0#Position_Details: {
                ns0#Job_Profile_Reference @(ns0# "Descriptor": "Hire_Reference"): {
                    ns0#ID @(ns0#"type": "Job_Profile_ID "): vars.testData.jobProfileID
                },
                ns0#Location_Reference @(ns0# "Descriptor": "Hire_Reference"): {
                    ns0#ID @(ns0#"type": "Location_ID"): vars.testData.locationID
                },
                ns0#Position_Time_Type_Reference @(ns0# "Descriptor": "Hire_Reference"): {
                    ns0#ID @(ns0#"type": "Position_Time_Type_ID"): vars.testData.positionTimeTypeID
                }
            }
        }
      }
    }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <workday:staffing operation="Hire_Employee" doc:name="Hire Employee" config-ref="config" />
    </flow>
    <flow name="listener-flow" doc:id="280c0403-6732-40e4-ba42-ce818e2caf3e" >
        <workday:modified-objects-listener objectType="WORKERS" doc:name="On Modified Objects Listener" doc:id="2f2cd599-cb87-43cb-a48e-940df076f890" config-ref="config">
            <scheduling-strategy >
                <fixed-frequency />
            </scheduling-strategy>
        </workday:modified-objects-listener>
        <logger level="INFO" doc:name="Logger - On Modified Objects" doc:id="41082f91-1fc0-4331-90b4-30aca8a516c1" message='#[payload]'/>
    </flow>
    </mule>
----

== Upgrade Prerequisites

Before you perform the upgrade, you must:

. Create a backup of your files, data, and configuration in case you need to restore to the previous version.
. Install Workday Connector v12.0 to replace the Workday operations that were previously included in Workday Connector v11.1.x.

== Upgrade Steps

Follow these steps to perform the upgrade from Workday Connector v11.1.x to Workday Connector v12.0:

. In Anypoint Studio, create a Mule project.
. In the Mule Palette view, click *Search in Exchange*.
. In the *Add Dependencies to Project* window, enter `Workday` in the search field.
. In the *Available modules* section, select *Workday Connector - Mule 4* and click *Add*.
. Click *Finish*.
. Verify that the `workday-connector` dependency version is `12.0.0` in the `pom.xml` file.

Studio upgrades the connector automatically.


== Verify the Upgrade

After you install the latest version of the connector, follow these steps to verify the upgrade:

. In Studio, verify that there are no errors in the *Problems* or *Console* views.
. Check the project `pom.xml` file and verify that there are no problems.
. Test the connection and verify that the operations work.

== Troubleshooting

If there are problems with caching the parameters and caching the metadata, try restarting Studio.

== Revert the Upgrade

If it is necessary to revert to the previous version of Workday Connector, change the `workday-connector` dependency version `12.0.0` in the project's `pom.xml` file to the previous version.

You must update the project's `pom.xml` file in Studio.

== See Also

* xref:introduction/introduction-to-anypoint-connectors.adoc[Introduction to Anypoint Connectors]
* https://help.mulesoft.com[MuleSoft Help Center]
